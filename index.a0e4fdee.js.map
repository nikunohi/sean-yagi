{"mappings":"ACAA,MAAM,EAAW,IAAI,qBAAqB,AAAC,IACvC,EAAQ,OAAO,CAAC,AAAC,IACb,QAAQ,GAAG,CAAC,GACT,EAAM,cAAc,CACnB,EAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAE3B,EAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAEtC,EACJ,GAGA,AADuB,SAAS,gBAAgB,CAAC,WAClC,OAAO,CAAC,AAAC,GAAO,EAAS,OAAO,CAAC,IAMhD,MAAM,EAAc,SAAS,aAAa,CAAC,iBAiB3C,OAAO,gBAAgB,CAAC,SAZxB,WACI,IAAM,EAAiB,OAAO,OAAO,CAC/B,EAAY,OAAO,WAAW,AAMpC,CAAA,EAAY,KAAK,CAAC,SAAS,CAAG,CAAC,MAAM,EAHhB,EAAI,EAAiB,EAGS,CAAC,CAAC,AACzD","sources":["<anon>","src/JS/app.js"],"sourcesContent":["const observer = new IntersectionObserver((entries)=>{\n    entries.forEach((entry)=>{\n        console.log(entry);\n        if (entry.isIntersecting) entry.target.classList.add('show');\n        else entry.target.classList.remove('show');\n    });\n});\nconst hiddenElements = document.querySelectorAll('.hidden');\nhiddenElements.forEach((el)=>observer.observe(el));\n// Select the scaling text\nconst scalingText = document.querySelector('.scaling-text');\n// Function to handle scaling and repositioning\nfunction scaleText() {\n    const scrollPosition = window.scrollY; // Get scroll distance from top\n    const maxScroll = window.innerHeight; // Set the maximum scale distance\n    // Calculate the scale factor (minimum scale: 0.5)\n    const scaleFactor = 1 - scrollPosition / maxScroll;\n    // Apply the scale to the text\n    scalingText.style.transform = `scale(${scaleFactor})`;\n}\n// Add a scroll event listener\nwindow.addEventListener('scroll', scaleText);\n\n//# sourceMappingURL=index.a0e4fdee.js.map\n","const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n        console.log(entry)\r\n        if(entry.isIntersecting){\r\n            entry.target.classList.add('show');\r\n        } else{\r\n            entry.target.classList.remove('show');\r\n        }\r\n    })\r\n})\r\n\r\nconst hiddenElements = document.querySelectorAll('.hidden');\r\nhiddenElements.forEach((el) => observer.observe(el));\r\n\r\n\r\n\r\n\r\n// Select the scaling text\r\nconst scalingText = document.querySelector('.scaling-text');\r\n\r\n\r\n\r\n// Function to handle scaling and repositioning\r\nfunction scaleText() {\r\n    const scrollPosition = window.scrollY; // Get scroll distance from top\r\n    const maxScroll = window.innerHeight; // Set the maximum scale distance\r\n\r\n    // Calculate the scale factor (minimum scale: 0.5)\r\n    const scaleFactor = (1 - scrollPosition / maxScroll);\r\n\r\n    // Apply the scale to the text\r\n    scalingText.style.transform = `scale(${scaleFactor})`;\r\n}\r\n\r\n// Add a scroll event listener\r\nwindow.addEventListener('scroll', scaleText);\r\n\r\n\r\n\r\n\r\n"],"names":["observer","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","target","classList","add","remove","hiddenElements","document","querySelectorAll","el","observe","scalingText","querySelector","window","addEventListener","scrollPosition","scrollY","maxScroll","innerHeight","style","transform"],"version":3,"file":"index.a0e4fdee.js.map"}